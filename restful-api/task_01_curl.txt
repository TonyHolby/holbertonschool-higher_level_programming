curl

curl (Client URL) is a command-line tool that allows users to transfer data to
or from a network server, using one of the supported protocols (HTTP, HTTPS,
FTP, and more). Itâ€™s widely used for debugging, testing, and interacting with
RESTful web services and APIs. By mastering curl, one can quickly prototype
API requests, diagnose server issues, and more, all from the command line.

To get the version of curl installed:

```

$ curl --version
curl 7.81.0 (x86_64-pc-linux-gnu) libcurl/7.81.0 OpenSSL/3.0.2 zlib/1.2.11 brotli/1.0.9 zstd/1.4.8 libidn2/2.3.2 libpsl/0.21.0 (+libidn2/2.3.2) libssh/0.9.6/openssl/zlib nghttp2/1.43.0 librtmp/2.3 OpenLDAP/2.5.16
Release-Date: 2022-01-05
Protocols: dict file ftp ftps gopher gophers http https imap imaps ldap ldaps mqtt pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp 
Features: alt-svc AsynchDNS brotli GSS-API HSTS HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets zstd

```

To fetch posts from JSONPlaceholder:

```

$ curl https://jsonplaceholder.typicode.com/posts
[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  }
]

```

To fetch only the headers of the same request:

```

$ curl -I https://jsonplaceholder.typicode.com/posts
HTTP/2 200 
date: Thu, 30 May 2024 11:56:56 GMT
content-type: application/json; charset=utf-8
report-to: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1710173982&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=a04tK%2BJeEfDl342fqUTRJz0ITDSSAMjHmI2h6r5FlRk%3D"}]}
reporting-endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1710173982&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=a04tK%2BJeEfDl342fqUTRJz0ITDSSAMjHmI2h6r5FlRk%3D
nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
x-powered-by: Express
x-ratelimit-limit: 1000
x-ratelimit-remaining: 999
x-ratelimit-reset: 1710174000
vary: Origin, Accept-Encoding
access-control-allow-credentials: true
cache-control: max-age=43200
pragma: no-cache
expires: -1
x-content-type-options: nosniff
etag: W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"
via: 1.1 vegur
cf-cache-status: HIT
age: 8186
server: cloudflare
cf-ray: 88be8b3599c56fe1-CDG
alt-svc: h3=":443"; ma=86400

To make a post request:

```

$ curl -X POST -d "title=foo&body=bar&userId=1" https://jsonplaceholder.typicode.com/posts
{
  "title": "foo",
  "body": "bar",
  "userId": "1",
  "id": 101
}

```
